const User = require("../models/user");
const { sendMessage } = require("./message");
const Chat = require("../models/chat");
const Message = require("../models/message");

exports.loginCustomer = async (req, res, next) => {
  try {
    const userId = req.body.customerId;
    const user = await User.findOne({ email: userId, isAgent: false });
    if (user) {
      return res.status(200).json({
        success: true,
        user: user,
      });
    }
    return res.status(401).json({
      success: true,
      message: "Please enter the correct userId",
    });
  } catch (err) {
    console.log(err);
    return res.status(500).json({
      error: err,
    });
  }
};

exports.loginAgent = async (req, res, next) => {
  try {
    const userId = req.body.agentId;
    const user = await User.findOne({ email: userId, isAgent: true });
    if (user) {
      return res.status(200).json({
        success: true,
        user: user,
      });
    }
    return res.status(401).json({
      success: true,
      message: "Please enter the correct userId",
    });
  } catch (err) {
    console.log(err);
    return res.status(500).json({
      error: err,
    });
  }
};

exports.searchCustomers = async (req, res, next) => {
  try {
    const keyword = req.query.search
      ? {
          $or: [
            { name: { $regex: req.query.search, $options: "i" } },
            { userId: { $regex: req.query.search, $options: "i" } },
          ],
        }
      : {};

    const users = await User.find(keyword).find({ isAgent: false });

    return res.status(200).json({
      success: true,
      users,
    });
  } catch (err) {}
};

exports.addUsers = async (req, res) => {
  try {
    for (let i = 0; i < users.length; i++) {
      const chat = await Chat.findOne({ chatId: users[i].userId });
      console.log(chat, "******");
      var message = await Message.create({
        chat: chat._id,
        sender: chat.users[0],
        content: users[i].content,
        timestamp: users[i].timestamp,
      });
      message = await message.populate("sender", "userId isAgent");
      message = await message.populate("chat");
      message = await User.populate(message, {
        path: "chat.users",
        select: "userId isAgent",
      });
      await Chat.findByIdAndUpdate(chat._id, { latestMessage: message });
    }

    return res.status(200).json({ success: true });
  } catch (err) {
    console.log(err);
  }
};
